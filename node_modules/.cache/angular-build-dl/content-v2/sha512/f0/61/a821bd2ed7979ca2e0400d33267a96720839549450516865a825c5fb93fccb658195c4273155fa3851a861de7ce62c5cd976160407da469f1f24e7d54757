{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/main-nav/main-nav.component.ts","./src/app/main-nav/main-nav.component.html","./src/app/my-devices/my-devices.component.ts","./src/app/my-devices/my-devices.component.html","./src/app/shared/data.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MyDevicesComponent } from './my-devices/my-devices.component';\nimport { MainNavComponent } from './main-nav/main-nav.component';\n\n\nconst routes: Routes = [\n  {\n    path:'', component:HomeComponent\n  },\n  {\n    path:'home', component:MainNavComponent\n  },\n  {\n    path:'dashboard', component:DashboardComponent,\n    data:{\n      icon:'dashboard',\n      title:'Dashboard'\n    }\n  },\n  {\n    path:'myDevices', component:MyDevicesComponent,\n    data:{\n      icon:'important_devices',\n      title:'My Devices'\n    }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'blocfend';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatTableModule} from '@angular/material/table';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MainNavComponent } from './main-nav/main-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport { HomeComponent } from './home/home.component';\nimport { MyDevicesComponent } from './my-devices/my-devices.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainNavComponent,\n    HomeComponent,\n    MyDevicesComponent,\n    DashboardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    HttpClientModule,\n    MatTableModule,\n    MatPaginatorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit,ViewChild } from '@angular/core';\nimport {MatPaginator} from '@angular/material/paginator';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {DataService} from '../shared/data.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({height: '0px', minHeight: '0'})),\n      state('expanded', style({height: '*'})),\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\n    ]),\n  ],\n})\nexport class DashboardComponent implements OnInit {\n  dataSource = new MatTableDataSource<BlockElement>();\n  columnsToDisplay = ['Block', 'Timestamp'];\n  expandedElement: BlockElement | null;\n\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\n\n  constructor(public dataService: DataService) { }\n\n\n  ngOnInit(): void {\n    this.getBlockData();\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getBlockData(){\n    this.dataService.getData().subscribe((res) => {\n        console.log(res);  \n      // let data = JSON.parse(res);\n        this.dataSource = res as MatTableDataSource<BlockElement>;\n    });\n  }\n\n}\n\nexport class BlockElement{\n  _id: string;\n  timestamp: string;\n  description:{\n    _id:string;\n    transaction_hash:string;\n    parent_hash:string;\n    sender:string;\n    receiver:string;\n    timestamp:string;\n    random_num:number;\n    message:string;\n  }  \n}\n","<div>\n    <mat-toolbar style=\"margin:10px;\">Transactions</mat-toolbar>\n</div>\n\n\n<table mat-table\n       [dataSource]=\"dataSource\" multiTemplateDataRows\n       class=\"mat-elevation-z8\">\n  <ng-container matColumnDef=\"Block\">\n    <th mat-header-cell *matHeaderCellDef> Block </th>\n    <td mat-cell *matCellDef=\"let element\"> <span class=\"id\">{{element._id}}</span> </td>\n  </ng-container>\n  <ng-container matColumnDef=\"Timestamp\">\n    <th mat-header-cell *matHeaderCellDef> Timestamp </th>\n    <td mat-cell *matCellDef=\"let element\"> {{element.timestamp}} </td>\n  </ng-container>\n\n  <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\n  <ng-container matColumnDef=\"expandedDetail\">\n    <td mat-cell *matCellDef=\"let element\" [attr.colspan]=\"columnsToDisplay.length\">\n      <div class=\"example-element-detail\"\n           [@detailExpand]=\"element == expandedElement ? 'expanded' : 'collapsed'\">\n        <div class=\"example-element-diagram\">\n          <mat-icon class=\"tick\" [ngStyle]=\"{'color':'green'}\">done_outline</mat-icon>\n        </div>\n        <div class=\"example-element-description\">\n          <div><span style=\"color: green;\">Block ID:</span><span style=\"color:orange\">{{element.description._id}}</span></div>\n          <div><span style=\"color: green;\">Transaction Hash:</span><span style=\"color:orange\">{{element.description.transaction_hash}}</span></div>\n          <div><span style=\"color: green;\">Parent Hash:</span><span style=\"color:orange\">{{element.description.parent_hash}}</span></div>\n          <div><span style=\"color: green;\">Sender:</span><span style=\"color:orange\">{{element.description.sender}}</span></div>\n          <div><span style=\"color: green;\">Receiver:</span><span style=\"color:orange\">{{element.description.receiver}}</span></div>\n          <div><span style=\"color: green;\">Timestamp:</span><span style=\"color:orange\">{{element.description.timestamp}}</span></div>\n          <div><span style=\"color: green;\">Random number:</span><span style=\"color:orange\">{{element.description.random_num}}</span></div>\n          <div><span style=\"color: green;\">Transaction:</span><span style=\"color:orange\">{{element.description.message}}</span></div>\n        </div>\n      </div>\n    </td>\n  </ng-container>\n\n  <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay\"></tr>\n  <tr mat-row *matRowDef=\"let element; columns: columnsToDisplay;\"\n      class=\"example-element-row\"\n      [class.example-expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\">\n  </tr>\n  <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\n</table>\n<mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Main page comes here which contains about us, login.</h1>\n","import { Component,OnInit } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'app-main-nav',\n  templateUrl: './main-nav.component.html',\n  styleUrls: ['./main-nav.component.css']\n})\nexport class MainNavComponent implements OnInit{\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver,\n    activatedroute: ActivatedRoute) {}\n\n  ngOnInit(): void{\n    \n  }\n\n}","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar class=\"logo\"><img src=\"logo4.jpeg\" height=\"120px\" width=\"120px\"></mat-toolbar>\n    <mat-divider></mat-divider>\n    <mat-nav-list class=\"menus\">\n      <button class=\"menu-item\" routerLink=\"dashboard\" mat-flat-button>\n        <mat-list-item><mat-icon>dashboard</mat-icon>Dashboard\n      </mat-list-item></button>\n      <button class=\"menu-item\" routerLink=\"myDevices\" mat-flat-button>\n        <mat-list-item><mat-icon>important_devices</mat-icon>My Devices\n      </mat-list-item></button>\n      <button class=\"menu-item\" mat-flat-button>\n        <mat-list-item><mat-icon>help</mat-icon>Help\n      </mat-list-item></button>\n    </mat-nav-list>\n  </mat-sidenav>\n  \n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <mat-icon>dashboard</mat-icon><span>Dashboard</span>\n    <span class=\"spacer\"></span>\n    <button mat-button [matMenuTriggerFor]=\"menu\"><img src=\"user.png\" height=\"30px\" width=\"30px\"></button>\n      <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item>\n        <mat-icon>settings</mat-icon>\n        <span>Settings</span>\n      </button>\n      <button mat-menu-item>\n        <mat-icon>power_settings_new</mat-icon>\n        <span>Logout</span>\n      </button>\n      </mat-menu>\n    </mat-toolbar>\n    <ng-content></ng-content>\n    <!-- Add Content Here -->\n  </mat-sidenav-content>\n</mat-sidenav-container>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-devices',\n  templateUrl: './my-devices.component.html',\n  styleUrls: ['./my-devices.component.css']\n})\nexport class MyDevicesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>my-devices works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClient,HttpResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: HttpClient) { }\n\n  blocksURL = '/blocks';\n\n  getData() {\n    return this.http.get(this.blocksURL);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}